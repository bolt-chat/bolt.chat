// Copyright 2021 The boltchat Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package identity

import (
	"os"
	"path"

	"github.com/bolt-chat/client/config"
	"golang.org/x/crypto/openpgp"
	"golang.org/x/crypto/openpgp/packet"
)

func writePGPEntity(entity *openpgp.Entity) error {
	// Create
	f, fileErr := os.Create(path.Join(config.GetConfigRoot(), "entity"))
	defer f.Close()

	// Only the current user may access this file
	f.Chmod(0600)

	if fileErr != nil {
		return fileErr
	}

	// Serialize the entity (including private key)
	return entity.SerializePrivate(f, &packet.Config{})
}

// CreatePGPEntity TODO
func CreatePGPEntity(username string) (*openpgp.Entity, error) {
	entity, entityErr := openpgp.NewEntity(
		username,
		"generated by Bolt",
		"identities@boltchat.net",
		&packet.Config{},
	)

	if entityErr != nil {
		return nil, entityErr
	}

	// Write the entity to disk
	writePGPEntity(entity)

	return entity, nil
}
