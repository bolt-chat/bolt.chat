name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      assets_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changelog:
            - @@ TO BE FILLED OUT @@
          draft: true
          prerelease: true

  build-binaries:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up the environment for Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.15.6'
    - name: Install dependencies
      run: |
        go get github.com/magefile/mage
        go install github.com/magefile/mage
    - name: Compile binaries
      run: mage build:all
    - name: Compress binaries
      run: mage ci:compressBinaries
    - name: Save binaries as artifact
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: binaries.tar.gz

  upload-assets:
    runs-on: ubuntu-latest
    needs: [create-release, build-binaries]
    steps:
    - name: Download binary artifacts
      uses: actions/download-artifact@v2
      with:
        name: binaries
    - name: Extract artifacts
      run: tar xvf binaries.tar.gz

    - name: Upload Linux/AMD64 client binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.assets_upload_url }}
        asset_path: build/boltchat-client-linux-amd64
        asset_name: boltchat-client-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows/AMD64 client binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.assets_upload_url }}
        asset_path: build/boltchat-client-windows-amd64.exe
        asset_name: boltchat-client-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload Darwin/AMD64 client binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.assets_upload_url }}
        asset_path: build/boltchat-client-darwin-amd64
        asset_name: boltchat-client-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload Linux/AMD64 server binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.assets_upload_url }}
        asset_path: build/boltchat-server-linux-amd64
        asset_name: boltchat-server-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows/AMD64 server binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.assets_upload_url }}
        asset_path: build/boltchat-server-windows-amd64.exe
        asset_name: boltchat-server-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload Darwin/AMD64 server binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.assets_upload_url }}
        asset_path: build/boltchat-server-darwin-amd64
        asset_name: boltchat-server-darwin-amd64
        asset_content_type: application/octet-stream

  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Packages 
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: boltchat/server:latest
